CMAKE_MINIMUM_REQUIRED ( VERSION 3.12 )

PROJECT (Helios LANGUAGES CXX C)

MACRO(ADD_CXX_COMPILER_FLAG flag)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${flag}")
ENDMACRO()

IF(CMAKE_COMPILER_IS_GNUCXX)
  ADD_CXX_COMPILER_FLAG(-std=gnu++17)
  ADD_CXX_COMPILER_FLAG(-Wno-conversion-null)
ELSEIF(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
  ADD_CXX_COMPILER_FLAG(-std=c++17)
  ADD_CXX_COMPILER_FLAG(-Wno-deprecated-register)
ELSEIF(CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
  ADD_CXX_COMPILER_FLAG(-std=c++17)
ELSEIF(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
  ADD_CXX_COMPILER_FLAG(/std:c++17)
ENDIF()

IF(MSVC)
  ADD_DEFINITIONS (/D _CRT_SECURE_NO_WARNINGS)
  ADD_DEFINITIONS (/D YY_NO_UNISTD_H)
ENDIF()

IF(CMAKE_BUILD_TYPE MATCHES Release)
  ADD_DEFINITIONS (-DNDEBUG)
  IF(CMAKE_COMPILER_IS_GNUCXX)
    ADD_CXX_COMPILER_FLAG(-O3)
  ELSEIF(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
    ADD_CXX_COMPILER_FLAG(-O3)
  ELSEIF(CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
    ADD_CXX_COMPILER_FLAG(-O3)
  ELSEIF(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    ADD_CXX_COMPILER_FLAG(/O2)
  ENDIF()
ENDIF()

SET(PROFILE_RELEASE ON)
ADD_SUBDIRECTORY(HeliosEngine)
ADD_SUBDIRECTORY(HeliosEditor)